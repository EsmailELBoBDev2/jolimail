version: 2

workflows:
  version: 2
  workflow:
    jobs:
      # - test-client
      - lint-server
      - test-server
      - build-image:
          requires:
            # - test-client
            - test-server
            - lint-server

jobs:
  # test-client:
  #   docker:
  #     - image: docker:stable
  #   steps:
  #     - run: apk add --no-cache curl
  #     - run: mkdir -p ~/.docker/cli-plugins
  #     - run: curl --output ~/.docker/cli-plugins/docker-buildx --location --retry 3 https://github.com/docker/buildx/releases/download/v0.4.2/buildx-v0.4.2.linux-amd64
  #     - run: chmod a+x ~/.docker/cli-plugins/docker-buildx
  #     - run: docker buildx install
  #     - checkout
  #     - setup_remote_docker
  #     - run: docker buildx build --tag jolimail-test-client --target client-base --load .
  #     - run: docker run -e CI=true jolimail-test-client npm test

  lint-server:
    docker:
      - image: rust:1-slim-buster
    steps:
      - run: rustup component add rustfmt
      - checkout
      - run:
          command: cargo fmt -- --check src/{**/,}*.rs
          working_directory: ~/project/server

  test-server:
    docker:
      - image: jdrouet/rust-nightly:buster-slim-dev
      - image: postgres:12-alpine
        environment:
          POSTGRES_HOST_AUTH_METHOD: trust
    steps:
      - checkout
      - run:
          command: cargo test
          working_directory: ~/project/server
          environment:
            DATABASE_HOST: localhost
            DATABASE_USER: postgres
            DATABASE_DBNAME: postgres
            MIGRATION_PATH: migrations
            TEST_MIGRATION_PATH: migrations

  build-image:
    docker:
      - image: jdrouet/docker-with-buildx:stable
    steps:
      - run: docker buildx install
      - checkout
      - setup_remote_docker
      - run: docker build --tag jdrouet/jolimail:$CIRCLE_BRANCH .
